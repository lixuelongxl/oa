<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.core136.mapper.bpm.BpmRunProcessMapper">
	<resultMap id="BpmRunProcess" type="com.core136.bean.bpm.BpmRunProcess">
		<id column="ID" property="id" jdbcType="BIGINT" />
		<result column="RUN_PROCESS_ID" property="runProcessId" jdbcType="VARCHAR" />
		<result column="RUN_ID" property="runId" jdbcType="VARCHAR" />
		<result column="PROCESS_ID" property="processId" jdbcType="VARCHAR" />
		<result column="OP_FLAG" property="opFlag" jdbcType="VARCHAR" />
		<result column="ACCOUNT_ID" property="accountId" jdbcType="VARCHAR" />
		<result column="REC_TIME" property="recTime" jdbcType="VARCHAR" />
		<result column="END_TIME" property="endTime" jdbcType="VARCHAR" />
		<result column="PASS_STATUS" property="passStatus" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR"/>
		<result column="IDEA_TEXT" property="ideaText" jdbcType="VARCHAR"/>
		<result column="FOLLOW" property="follow" jdbcType="VARCHAR" />
		<result column="WAIT_TYPE" property="waitType" jdbcType="VARCHAR" />
		<result column="WAIT_PROCESS" property="waitProcess" jdbcType="VARCHAR" />
		<result column="ATTACH" property="attach" jdbcType="VARCHAR" />
		<result column="GATHER_PARENT_ID" property="gatherParentId" jdbcType="VARCHAR" />
		<result column="SEND_ID" property="sendId" jdbcType="VARCHAR" />
		<result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
		<result column="ORG_ID" property="orgId" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="getCanGoBckProcessList" resultType="java.util.HashMap">
	SELECT R.RUN_PROCESS_ID AS runProcessId,P.PRCS_NAME AS prcsName,R.PROCESS_ID AS processId,R.ACCOUNT_ID AS opUser,R.END_TIME AS endTime,
	(SELECT U.USER_NAME FROM USER_INFO U WHERE U.ORG_ID=#{orgId} AND U.ACCOUNT_ID=R.ACCOUNT_ID) AS opUserName
	FROM BPM_RUN_PROCESS R LEFT JOIN BPM_PROCESS P ON R.ORG_ID=P.ORG_ID AND R.PROCESS_ID=P.PROCESS_ID
	WHERE 
	R.ORG_ID=#{orgId}
	AND R.RUN_ID=#{runId}
	AND R.STATUS='1'
	AND R.OP_FLAG='0'
	</select>
	
	<select id="getBpmRunProcess" resultMap="BpmRunProcess">
		SELECT *
		FROM BPM_RUN_PROCESS 
		WHERE ORG_ID=#{orgId}
		AND RUN_ID=#{runId}
		AND (
			ACCOUNT_ID = #{accountId} OR 
			ACCOUNT_ID IN (SELECT E.FROM_ID FROM BPM_ENTRUST E WHERE E.ORG_ID=#{orgId} AND E.TO_ID=#{accountId} AND 
			E.BEGIN_TIME&lt;=#{nowTime}  AND E.END_TIME &gt;=#{nowTime} AND E.FROM_ID IS NOT NULL)
		)
		AND RUN_PROCESS_ID = #{runProcessId}
		AND STATUS!='1'
	</select>
	
	<!-- 待办列表 -->
	<select id="getGoProcessList" resultType="java.util.HashMap">
		SELECT
		B.ID AS id,
		B.URGENCY AS urgency,
		A.RUN_ID AS runId,
		A.RUN_PROCESS_ID AS runProcessId,
		B.FLOW_TITLE AS flowTitle,
		B.FLOW_ID AS flowId,
		(SELECT C.FREE_TO_OTHER FROM BPM_FLOW C WHERE C.ORG_ID=B.ORG_ID AND
		B.FLOW_ID=C.FLOW_ID) AS freeToOther,
		A.CREATE_TIME AS createTime,
		(
		SELECT
		U.USER_NAME
		FROM
		USER_INFO U
		WHERE
		A.CREATE_USER = U.ACCOUNT_ID AND A.ORG_ID=U.ORG_ID
		) AS createUser,
		(
		SELECT
		C.PRCS_NAME
		FROM
		BPM_PROCESS C
		WHERE
		A.PROCESS_ID = C.PROCESS_ID AND A.ORG_ID=C.ORG_ID
		) AS prcsName,
		(
		SELECT
		D.PASS_TIME
		FROM
		BPM_PROCESS D
		WHERE
		A.PROCESS_ID = D.PROCESS_ID AND A.ORG_ID=D.ORG_ID
		) AS passTime,
		A.SEND_ID AS sendId
		FROM
		BPM_RUN_PROCESS A,
		BPM_LIST B
		WHERE
		A.ORG_ID=B.ORG_ID
		AND A.RUN_ID = B.RUN_ID
		AND A.ORG_ID=#{orgId}
		AND (
			A.ACCOUNT_ID = #{accountId} OR 
			A.ACCOUNT_ID IN (SELECT E.FROM_ID FROM BPM_ENTRUST E WHERE E.ORG_ID=#{orgId} AND E.TO_ID=#{accountId} AND 
			E.BEGIN_TIME&lt;=#{nowTime}  AND E.END_TIME &gt;=#{nowTime} AND E.FROM_ID IS NOT NULL)
		)
		AND B.DEL_FLAG!='1'
		AND A.STATUS!='1'
		<if test="(bpmRunNo!=null) and (bpmRunNo!='')">
			AND B.ID = #{bpmRunNo}
		</if>
		<if test="(createUser!=null) and (createUser!='')">
			AND B.CREATE_USER = #{createUser}
		</if>
		<if test="(flowId!=null) and (flowId!='')">
			AND B.FLOW_ID = #{flowId}
		</if>
		<if test="search !='%%' and search !=''.toString() and search!=null">
			AND(B.FLOW_TITLE LIKE #{search} OR B.ID=#{search})
		</if>
	</select>
	
	<select id="getMyProcessListForDesk" resultType="java.util.HashMap">
		SELECT
		B.ID AS id,
		B.URGENCY AS urgency,
		A.RUN_ID AS runId,
		A.RUN_PROCESS_ID AS runProcessId,
		B.FLOW_TITLE AS flowTitle,
		B.FLOW_ID AS flowId,
		(SELECT C.FREE_TO_OTHER FROM BPM_FLOW C WHERE C.ORG_ID=B.ORG_ID AND
		B.FLOW_ID=C.FLOW_ID) AS freeToOther,
		A.CREATE_TIME AS createTime,
		(
		SELECT
		U.USER_NAME
		FROM
		USER_INFO U
		WHERE
		A.CREATE_USER = U.ACCOUNT_ID AND A.ORG_ID=U.ORG_ID
		) AS createUser,
		(
		SELECT
		C.PRCS_NAME
		FROM
		BPM_PROCESS C
		WHERE
		A.PROCESS_ID = C.PROCESS_ID AND A.ORG_ID=C.ORG_ID
		) AS prcsName,
		(
		SELECT
		D.PASS_TIME
		FROM
		BPM_PROCESS D
		WHERE
		A.PROCESS_ID = D.PROCESS_ID AND A.ORG_ID=D.ORG_ID
		) AS passTime,
		A.SEND_ID AS sendId
		FROM
		BPM_RUN_PROCESS A,
		BPM_LIST B
		WHERE
		A.ORG_ID=B.ORG_ID
		AND A.RUN_ID = B.RUN_ID
		AND A.ORG_ID=#{orgId}
		AND (
			A.ACCOUNT_ID = #{accountId} OR 
			A.ACCOUNT_ID IN (SELECT E.FROM_ID FROM BPM_ENTRUST E WHERE E.ORG_ID=#{orgId} AND E.TO_ID=#{accountId} AND 
			E.BEGIN_TIME&lt;= #{nowTime}  AND E.END_TIME &gt;= #{nowTime} AND E.FROM_ID IS NOT NULL)
		)
		AND B.DEL_FLAG!='1'
		AND A.STATUS!='1'
		ORDER BY A.CREATE_TIME ASC LIMIT 0,5
	</select>
	

<!-- 所有历史过程 -->
	<select id="getPrintBpmRunProcess" resultType="java.util.HashMap">
		SELECT
		B.ID AS id,
		B.RUN_PROCESS_ID AS runProcessId,
		B.RUN_ID AS runId,
		B.PROCESS_ID AS processId,
		(SELECT P.PRCS_NAME FROM BPM_PROCESS P WHERE
		P.ORG_ID=B.ORG_ID AND P.PROCESS_ID=B.PROCESS_ID) AS prcsName,
		B.ACCOUNT_ID AS accountId,
		U.USER_NAME AS userName,
		(SELECT A.HEAD_IMG FROM ACCOUNT A WHERE A.ORG_ID=B.ORG_ID AND A.ACCOUNT_ID=B.ACCOUNT_ID) AS headImg,
		B.CREATE_USER AS createUser,
		(SELECT U2.USER_NAME FROM USER_INFO U2 WHERE U2.ORG_ID=B.ORG_ID AND
		U2.ACCOUNT_ID=B.CREATE_USER) AS createUserName,
		B.CREATE_TIME AS
		createTime,
		B.REC_TIME AS recTime,
		B.END_TIME AS endTime,
		B.PASS_STATUS
		AS passStatus,
		B.STATUS AS status,
		B.IDEA_TEXT AS ideaText,
		B.FOLLOW AS follow,
		B.ATTACH AS attach,
		B.SEND_ID AS sendId,
		B.OP_FLAG AS opFlag,
		B.ORG_ID AS orgId
		FROM
		BPM_RUN_PROCESS B,USER_INFO U
		WHERE
		U.ORG_ID=B.ORG_ID AND
		U.ACCOUNT_ID=B.ACCOUNT_ID AND
		B.ORG_ID=#{orgId} AND
		B.RUN_ID=#{runId}
	</select>

	<!-- 所有办理步骤 -->
	<select id="getAllBpmRunProcess" resultType="java.util.HashMap">
		SELECT
		B.ID AS id,
		B.RUN_PROCESS_ID AS runProcessId,
		B.RUN_ID AS runId,
		B.PROCESS_ID AS processId,
		(SELECT P.PRCS_NAME FROM BPM_PROCESS P WHERE
		P.ORG_ID=B.ORG_ID AND P.PROCESS_ID=B.PROCESS_ID) AS prcsName,
		B.ACCOUNT_ID AS accountId,
		U.USER_NAME AS userName,
		(SELECT A.HEAD_IMG FROM ACCOUNT A WHERE A.ORG_ID=B.ORG_ID AND A.ACCOUNT_ID=B.ACCOUNT_ID) AS headImg,
		B.CREATE_USER AS createUser,
		(SELECT U2.USER_NAME FROM USER_INFO U2 WHERE U2.ORG_ID=B.ORG_ID AND
		U2.ACCOUNT_ID=B.CREATE_USER) AS createUserName,
		B.CREATE_TIME AS
		createTime,
		B.REC_TIME AS recTime,
		B.END_TIME AS endTime,
		B.PASS_STATUS
		AS passStatus,
		B.STATUS AS status,
		B.IDEA_TEXT AS ideaText,
		B.FOLLOW AS
		follow,
		B.ATTACH AS attach,
		B.SEND_ID AS sendId,
		B.OP_FLAG AS opFlag,
		B.ORG_ID AS orgId
		FROM
		BPM_RUN_PROCESS B,USER_INFO U
		WHERE
		U.ORG_ID=B.ORG_ID AND
		U.ACCOUNT_ID=B.ACCOUNT_ID AND
		B.ORG_ID=#{orgId} AND
		B.RUN_ID=#{runId} AND
		B.STATUS='1'
	</select>

	<update id="endProcess">
		UPDATE BPM_RUN_PROCESS SET STATUS='1',END_TIME=#{endTime} WHERE ORG_ID=#{orgId} AND RUN_PROCESS_ID=#{runProcessId}
	</update>

	<select id="getNowStep" resultType="java.util.HashMap">
		SELECT PROCESS_ID AS processId,PRCS_NAME AS prcsName FROM
		BPM_PROCESS P
		WHERE P.ORG_ID=#{orgId}
		AND P.PROCESS_ID IN(
			SELECT DISTINCT R.PROCESS_ID FROM BPM_RUN_PROCESS R
			WHERE R.ORG_ID=#{orgId}
			AND R.RUN_ID=#{runId}
			AND R.STATUS='0'
		)
	</select>
	
	<select id="getChangeBpmUserStep" resultType="java.util.HashMap">
		SELECT B.RUN_PROCESS_ID AS runProcessId, B.RUN_PROCESS_ID AS
		runProcessId,P.PRCS_NAME AS prcsName,B.ACCOUNT_ID AS accountId,
		(SELECT U.USER_NAME FROM USER_INFO U WHERE U.ORG_ID=B.ORG_ID AND
		B.ACCOUNT_ID=U.ACCOUNT_ID) AS userName,
		B.CREATE_TIME AS createTime
		FROM BPM_RUN_PROCESS B,BPM_PROCESS P
		WHERE
		B.ORG_ID=P.ORG_ID AND
		B.STATUS='0' AND
		B.SEND_ID IS NOT NULL AND 
		B.PROCESS_ID=P.PROCESS_ID AND
		B.ORG_ID=#{orgId} AND
		B.RUN_ID=#{runId}
	</select>
	
	
	<select id="getBpmRunProcessForMonitor" resultType="java.util.HashMap">
		SELECT  
		B.ID AS id,B.RUN_ID AS runId,B.FLOW_TITLE AS flowTitle,B.DEL_FLAG AS delFlag,
		R.RUN_PROCESS_ID AS runProcessId,R.PROCESS_ID AS processId,R.OP_FLAG AS opFlag,
		R.ACCOUNT_ID AS accountId,R.CREATE_TIME AS createTime,R.REC_TIME AS recTime,R.END_TIME AS endTime,
		(SELECT U.USER_NAME FROM USER_INFO U WHERE U.ORG_ID=R.ORG_ID AND U.ACCOUNT_ID=R.ACCOUNT_ID) AS opUserName,
		R.STATUS AS status,R.CREATE_USER AS createUser,
		(SELECT P.PRCS_NAME FROM BPM_PROCESS P WHERE P.ORG_ID=R.ORG_ID AND P.PROCESS_ID=R.PROCESS_ID) AS prcsName
		FROM
		BPM_LIST B JOIN BPM_RUN_PROCESS R
		ON B.ORG_ID = R.ORG_ID AND B.RUN_ID=R.RUN_ID
		WHERE B.ORG_ID=#{orgId}
		<if test="id!=null and id!=''.toString()">
		AND B.ID=#{id}
		</if>
		<if test="createUser!=null and createUser!=''.toString()">
		AND B.CREATE_USER=#{createUser}
		</if>
		<if test="beginTime!=null and beginTime!=''.toString()">
		AND B.CREATE_TIME &gt;=#{beginTime}
		</if>
		<if test = "endTime!=''.toString() and endTime!=null">
		AND B.CREATE_TIME &lt;=#{endTime}
		</if>
		<if test="flowId!=''.toString() and flowId!=null">
		AND B.FLOW_ID = #{flowId}
		</if>
		<if test="opFlag!='1'.toString()">
		AND B.FLOW_ID IN(SELECT TEMP.FLOW_ID FROM BPM_FLOW TEMP WHERE TEMP.ORG_ID=#{orgId} AND FUN_INTE_ARRAY(TEMP.MANAGE_PRIV,#{accountId})>0)
		</if>
		<if test="search!='%%'">
		AND B.FLOW_TITLE LIKE #{search}
		</if>
	</select>
	
	<select id="getBpmRunProcessChat" resultType="java.util.HashMap">
	SELECT B.PROCESS_ID AS processId,B.RUN_PROCESS_ID AS runProcessId,P.PRCS_NAME AS prcsName,B.SEND_ID AS sendId, B.CREATE_TIME AS createTime,B.REC_TIME AS recTime,B.END_TIME AS endTime,
	B.OP_FLAG AS opFlag,B.PASS_STATUS AS passStatus,B.STATUS AS status,
	(SELECT U.USER_NAME FROM USER_INFO U WHERE U.ORG_ID=B.ORG_ID AND B.ACCOUNT_ID=U.ACCOUNT_ID) AS opUserName
	FROM BPM_RUN_PROCESS B JOIN BPM_PROCESS P ON B.ORG_ID=P.ORG_ID AND B.PROCESS_ID=P.PROCESS_ID
	WHERE
	B.ORG_ID=#{orgId} 
	AND B.RUN_ID=#{runId}
	</select>
<!-- 	判断是否可以收回 -->
	<select id="getCanTaskBackRunProcessList" resultType="java.util.HashMap">
	SELECT P.RUN_PROCESS_ID AS runProcessId,(SELECT B.PRCS_NAME FROM BPM_PROCESS B WHERE B.ORG_ID=P.ORG_ID AND B.PROCESS_ID=P.PROCESS_ID) AS prcsName,
	P.REC_TIME AS recTime,P.CREATE_TIME AS createTime
	FROM 
	BPM_RUN_PROCESS P
	WHERE
	P.ORG_ID=#{orgId} AND 
	P.RUN_ID=#{runId} AND 
	P.CREATE_USER=#{accountId} AND
	P.STATUS='0' AND
	P.OP_FLAG = '0' AND 
	P.RUN_PROCESS_ID NOT IN (SELECT TMP.SEND_ID FROM BPM_RUN_PROCESS TMP WHERE TMP.ORG_ID=#{orgId} AND TMP.RUN_ID=#{runId} AND TMP.OP_FLAG = '0' AND TMP.STATUS='0' AND TMP.SEND_ID IS NOT NULL)
	</select>
	
	
	<select id="getBpmFlowChartList" resultType="java.util.HashMap">
	SELECT B.PROCESS_ID AS processId,B.RUN_PROCESS_ID AS runProcessId,P.PRCS_NAME AS prcsName,B.SEND_ID AS sendId, B.CREATE_TIME AS createTime,B.REC_TIME AS recTime,B.END_TIME AS endTime,
	B.OP_FLAG AS opFlag,B.PASS_STATUS AS passStatus,B.STATUS AS status,B.ACCOUNT_ID AS accountId,P.PRCS_TYPE AS prcsType,B.IDEA_TEXT AS ideaText,
	(SELECT U.USER_NAME FROM USER_INFO U WHERE U.ORG_ID=B.ORG_ID AND B.ACCOUNT_ID=U.ACCOUNT_ID) AS opUserName
	FROM BPM_RUN_PROCESS B JOIN BPM_PROCESS P ON B.ORG_ID=P.ORG_ID AND B.PROCESS_ID=P.PROCESS_ID
	WHERE
	B.ORG_ID=#{orgId} 
	AND B.RUN_ID=#{runId}
	ORDER BY P.CREATE_TIME ASC
	</select>
	
<!-- 	获取指定步骤未完成的数量 -->
	<select id="getParentWaitForProcessIdCount" resultType="Integer">
		SELECT COUNT(1) AS ZS FROM BPM_RUN_PROCESS WHERE ORG_ID=#{orgId} AND PROCESS_ID=#{processId} AND RUN_ID=#{runId} AND STATUS='0' AND OP_FLAG='0'
	</select>
	
	
<!-- 	获取上一步骤未完成的数量 -->
	<select id="getParentWaitCount" resultType="Integer">
		SELECT COUNT(1) AS ZS FROM 
		BPM_RUN_PROCESS WHERE ORG_ID=#{orgId} 
		AND RUN_ID=#{runId} 
		AND SEND_ID=
			(SELECT SEND_ID FROM BPM_RUN_PROCESS WHERE ORG_ID=#{orgId} AND RUN_ID=#{runId}  AND RUN_PROCESS_ID=
				(SELECT SEND_ID FROM BPM_RUN_PROCESS WHERE ORG_ID=#{orgId} AND RUN_ID=#{runId} AND RUN_PROCESS_ID=#{runProcessId})
			)
		AND STATUS='0' AND OP_FLAG='0'
	</select>
<!-- 	判断创建的下一步是否已经存在 -->
	<select id="setpIsExist" resultType="Integer">
		SELECT COUNT(1) AS ZS 
		FROM BPM_RUN_PROCESS 
		WHERE 
			ORG_ID=#{orgId} 
			AND PROCESS_ID=#{processId} 
			AND RUN_ID=#{runId} 
			AND SEND_ID=#{sendId} 
			AND OP_FLAG=#{opFlag}
	</select>
	
	
	<select id="isCantTaskBack" resultType="Integer">
		SELECT COUNT(1) AS ZS 
		FROM BPM_RUN_PROCESS 
		WHERE 
			ORG_ID=#{orgId} 
			AND CREATE_USER=#{createUser} 
			AND RUN_ID=#{runId} 
			AND STATUS='0'
			AND OP_FLAG='0'
			AND SEND_ID IN(SELECT TEMP.RUN_PROCESS_ID FROM BPM_RUN_PROCESS TEMP WHERE TEMP.ORG_ID=#{orgId} AND TEMP.RUN_ID=#{runId})
	</select>
	
<delete id="deleteRunProcessByFlowId">
   DELETE FROM BPM_RUN_PROCESS 
   WHERE 
   ORG_ID=#{orgId} 
   AND PROCESS_ID IN(SELECT TMP.PROCESS_ID FROM BPM_PROCESS TMP WHERE TMP.ORG_ID=#{orgId} AND TMP.FLOW_ID=#{flowId})
</delete>	



<select id="getGoMobileProcessList" resultType="java.util.HashMap">
		SELECT
		B.ID AS id,
		B.URGENCY AS urgency,
		A.RUN_ID AS runId,
		A.RUN_PROCESS_ID AS runProcessId,
		B.FLOW_TITLE AS flowTitle,
		B.FLOW_ID AS flowId,
		(SELECT C.FREE_TO_OTHER FROM BPM_FLOW C WHERE C.ORG_ID=B.ORG_ID AND
		B.FLOW_ID=C.FLOW_ID) AS freeToOther,
		A.CREATE_TIME AS createTime,
		(
		SELECT
		U.USER_NAME
		FROM
		USER_INFO U
		WHERE
		A.CREATE_USER = U.ACCOUNT_ID AND A.ORG_ID=U.ORG_ID
		) AS createUser,
		(
		SELECT
		C.PRCS_NAME
		FROM
		BPM_PROCESS C
		WHERE
		A.PROCESS_ID = C.PROCESS_ID AND A.ORG_ID=C.ORG_ID
		) AS prcsName,
		(
		SELECT
		D.PASS_TIME
		FROM
		BPM_PROCESS D
		WHERE
		A.PROCESS_ID = D.PROCESS_ID AND A.ORG_ID=D.ORG_ID
		) AS passTime,
		A.SEND_ID AS sendId
		FROM
		BPM_RUN_PROCESS A,
		BPM_LIST B
		WHERE
		A.ORG_ID=B.ORG_ID
		AND A.RUN_ID = B.RUN_ID
		AND A.ORG_ID=#{orgId}
		AND (
			A.ACCOUNT_ID = #{accountId} OR 
			A.ACCOUNT_ID IN (SELECT E.FROM_ID FROM BPM_ENTRUST E WHERE E.ORG_ID=#{orgId} AND E.TO_ID=#{accountId} AND 
			E.BEGIN_TIME&lt;=#{nowTime}  AND E.END_TIME &gt;=#{nowTime} AND E.FROM_ID IS NOT NULL)
		)
		AND B.DEL_FLAG!='1'
		AND A.STATUS!='1'
		ORDER BY A.CREATE_TIME ASC LIMIT ${page},10
	</select>	
	
		
	<select id="getGatherRunProcessCount" resultType="Integer">
		SELECT COUNT(1) AS ZS 
		FROM BPM_RUN_PROCESS 
		WHERE 
			ORG_ID=#{orgId} 
			AND RUN_ID=#{runId} 
			AND STATUS='0'
			AND OP_FLAG='0'
			AND GATHER_PARENT_ID LIKE #{gatherParentId}
		
	</select>
	
</mapper>

